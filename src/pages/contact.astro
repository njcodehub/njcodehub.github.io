---
// filepath: /home/jestin/Documents/Dev/IDE/landing/src/pages/contact.astro
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'Contact',
};
---

<link rel="stylesheet" href="/css/animations.css" />

<Layout metadata={metadata}>
  <!-- Background MCU image with fade effect -->
  <div
    class="fixed inset-0"
    style="background-image: url('/IMG_Contact.webp'); background-size: cover; background-position: center; background-repeat: no-repeat; filter: blur(1px) brightness(0.9);"
  >
  </div>

  <section class="py-5 flex justify-center items-center min-h-[60vh] relative z-10">
    <form
      id="contactForm"
      class="p-8 rounded shadow-md w-full max-w-md space-y-4 animate-fade-in-up bg-white/95 backdrop-blur-md"
    >
      <h1 class="text-2xl font-bold mb-4 text-center text-black">Contact</h1>

      <!-- Message de succès -->
      <div id="successMessage" class="hidden p-4 bg-green-100 border border-green-400 text-green-700 rounded">
        Message sent successfully! I will get back to you soon!
      </div>

      <!-- Message d'erreur -->
      <div id="errorMessage" class="hidden p-4 bg-red-100 border border-red-400 text-red-700 rounded">
        Failed to send message. Please try again. Maybe a wrong email address?
      </div>

      <input
        type="text"
        name="user_name"
        placeholder="Votre nom"
        class="w-full border rounded px-3 py-2 bg-white text-black border-gray-300 focus:border-[#00adb5] focus:outline-none"
        required
      />
      <input
        type="email"
        name="user_email"
        placeholder="Votre email"
        class="w-full border rounded px-3 py-2 bg-white text-black border-gray-300 focus:border-[#00adb5] focus:outline-none"
        required
      />
      <textarea
        name="message"
        placeholder="Votre message"
        class="w-full border rounded px-3 py-2 bg-white text-black border-gray-300 focus:border-[#00adb5] focus:outline-none"
        rows="5"
        required></textarea>

      <button
        type="submit"
        id="submitBtn"
        class="w-full bg-[#00adb5] hover:bg-[#009aa1] text-white font-bold py-2 px-4 rounded transition-colors duration-200"
      >
        <span id="btnText">Envoyer</span>
        <span id="btnLoading" class="hidden">Envoi en cours...</span>
      </button>
    </form>
  </section>
</Layout>

<style>
  /* Force le header à être blanc tout le temps */
  header,
  header.sticky,
  header.relative,
  header.dark,
  header[data-aw-sticky-header] {
    background-color: white !important;
    backdrop-filter: blur(10px) !important;
    -webkit-backdrop-filter: blur(10px) !important;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1) !important;
  }

  /* S'assurer que le texte reste lisible */
  header nav a,
  header nav button {
    color: #222831 !important;
  }

  header nav a:hover,
  header nav button:hover {
    color: #00adb5 !important;
  }

  /* Style pour le lien actif */
  header nav a.aw-link-active {
    color: #00adb5 !important;
    font-weight: 600;
  }

  /* S'assurer que le header est visible au chargement */
  header {
    opacity: 1 !important;
    visibility: visible !important;
  }
</style>

<!-- EmailJS SDK -->
<script is:inline type="text/javascript" src="https://cdn.jsdelivr.net/npm/@emailjs/browser@4/dist/email.min.js"
></script>

<script>
  // Type simple pour EmailJS
  type EmailJS = {
    init: (userId: string) => void;
    send: (
      serviceId: string,
      templateId: string,
      templateParams: Record<string, string>
    ) => Promise<{ status: number; text: string }>;
  };

  document.addEventListener('DOMContentLoaded', function () {
    // S'assurer que le header est blanc au chargement
    const header = document.querySelector('header');
    if (header) {
      header.style.backgroundColor = 'white';
      header.style.backdropFilter = 'blur(10px)';
    }

    // Configuration EmailJS
    const EMAILJS_CONFIG = {
      SERVICE_ID: 'service_xy2wi56',
      TEMPLATE_ID: 'template_vbrqiw6',
      USER_ID: 'y1Kl58XSDbPZuJeMO',
    };

    // Initialiser EmailJS
    const emailjs = (window as unknown as { emailjs: EmailJS }).emailjs;
    emailjs.init(EMAILJS_CONFIG.USER_ID);

    // Gestion du formulaire
    const contactForm = document.getElementById('contactForm') as HTMLFormElement;
    const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement;
    const btnText = document.getElementById('btnText') as HTMLSpanElement;
    const btnLoading = document.getElementById('btnLoading') as HTMLSpanElement;
    const successMessage = document.getElementById('successMessage') as HTMLDivElement;
    const errorMessage = document.getElementById('errorMessage') as HTMLDivElement;

    contactForm.addEventListener('submit', function (e) {
      e.preventDefault();

      // Vérifications de sécurité
      if (!submitBtn || !btnText || !btnLoading || !successMessage || !errorMessage) {
        console.error('Éléments du formulaire non trouvés');
        return;
      }

      // Afficher l'état de chargement
      submitBtn.disabled = true;
      btnText.classList.add('hidden');
      btnLoading.classList.remove('hidden');

      // Masquer les messages précédents
      successMessage.classList.add('hidden');
      errorMessage.classList.add('hidden');

      // Préparer les données du template
      const templateParams = {
        from_name: contactForm.user_name.value,
        from_email: contactForm.user_email.value,
        message: contactForm.message.value,
      };

      // Envoyer l'email via EmailJS
      emailjs
        .send(EMAILJS_CONFIG.SERVICE_ID, EMAILJS_CONFIG.TEMPLATE_ID, templateParams)
        .then(function (response: { status: number; text: string }) {
          console.log('SUCCESS!', response.status, response.text);

          // Afficher le message de succès
          successMessage.classList.remove('hidden');

          // Réinitialiser le formulaire
          contactForm.reset();

          // Remettre le bouton en état normal
          submitBtn.disabled = false;
          btnText.classList.remove('hidden');
          btnLoading.classList.add('hidden');
        })
        .catch(function (error: Error) {
          console.log('FAILED...', error);

          // Afficher le message d'erreur
          errorMessage.classList.remove('hidden');

          // Remettre le bouton en état normal
          submitBtn.disabled = false;
          btnText.classList.remove('hidden');
          btnLoading.classList.add('hidden');
        });
    });
  });
</script>
